@model AllOfferViewModel
@{
    ViewBag.Title = "All Offers";
}

<h2 class="text-center">@ViewBag.Title</h2>

<hr class="border border-primary border-2 opacity-75" />
<h3 class="text-center">You need goods</h3>
<form method="get">
    <div class="row">
        <div class="form-group col-md-3 ">
            <div class="form-group">
                <label asp-for="Actions"></label>
                <select asp-for="ActionType" class="form-control">
                    <option value=""></option>
                    @foreach (var action in Model.Actions)
                    {
                        <option value="@action">@action</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="CountriesOfOrigin"></label>
            <select asp-for="Country" class="form-control" data-bs-toggle="dropdown">
                <option value=""></option>
                @foreach (var country in Model.CountriesOfOrigin)
                {
                    <option value="@country">@country</option>
                }
            </select>
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="IsTemperatureControlNeeded"></label>
                <select asp-for="IsTemperatureControlNeeded" class="form-control" data-bs-toggle="dropdown">
                    <option value=""></option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-4">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
@if (!Model.offers.Any())
{
    <h2 class="text-center">No offers found by the given criteria!</h2>
}
<div class="row text-centec">

    @foreach (var offer in Model.offers)
    {
        <partial name="_OfferViewPartial" model="@offer" />
    }
</div>
@{
    var nextPage = Model.CurrentPage + 1;
    var previousPage = Model.CurrentPage - 1;
    var maxPage = Math.Ceiling((double)Model.TotalOffersCount / AllOfferViewModel.OffersCountOnPage);
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.offers.Any();

    if (previousPage < 1)
    {
        previousPage = 1;
    }

}
<ul class="pagination justify-content-center" style="margin:20px 0" >
    <li class="page-item">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Offer"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-action="@Model.Actions"
           asp-route-countryOfOrigin="@Model.CountriesOfOrigin"
           asp-route-isTemperatureControlNeeded="@(Model.IsTemperatureControlNeeded)">
            Previous Page
        </a>
    </li>
    <li class="page-link">@Model.CurrentPage</li>
    <li class="page-item">
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Offer"
           asp-action="All"
           asp-route-currentPage="@nextPage"
           asp-route-action="@Model.Actions"
           asp-route-countryOfOrigin="@Model.CountriesOfOrigin"
           asp-route-isTemperatureControlNeeded="@(Model.IsTemperatureControlNeeded)">
            Next Page
        </a>
    </li>
</ul>
<hr class="border border-primary border-2 opacity-75" />