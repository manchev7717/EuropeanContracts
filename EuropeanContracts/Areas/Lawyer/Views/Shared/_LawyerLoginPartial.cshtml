@using Microsoft.AspNetCore.Identity
@inject SignInManager<EuropeanContractUser> SignInManager
@inject UserManager<EuropeanContractUser> UserManager
@inject ISupplierCompanyService supplierService
@inject IRecipientCompanyService recipientService
@inject ITransportCompanyService transporterService

@{
    string userName = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        userName = User.FindFirst(CustomUserClaimType.UserFullNameCustomClaim).Value.ToString(); 
    }

}
<ul class="navbar-nav">

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="btn btn-secondary" asp-area="" asp-controller="Offer" asp-action="All">Back To User Area </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a type="button" class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register">Sign in</a>
        </li>
        <li class="nav-item">
            <a type="button" class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
